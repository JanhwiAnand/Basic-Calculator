import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { useSelector } from 'react-redux';
import Login from './components/Login';
import Navbar from './components/Navbar';
import ApplyLeave from './components/ApplyLeave';
import Approval from './components/Approval';
import History from './components/History';
import Profile from './components/Profile';
import ErrorBoundary from './components/ErrorBoundary';
import { getToken, getUser } from './redux/selectors';
import './styles.css';
import AddEmployee from './components/AddUser';
import Dashboard from './components/Dashboard';

function App() {
  const token = useSelector(getToken);
  const user = useSelector(getUser);
  const isAdmin = user?.role === 'ADMIN';

  return (
    <div style={{ height: '100vh', width: '100vw' }}>
      <Router>
        {token && <Navbar />}
        <div className="container mt-3">
          <Routes>
            <Route
              path="/login"
              element={
                token ? (
                  <Navigate to={isAdmin ? "/dashboard" : "/apply-leave"} />
                ) : (
                  <ErrorBoundary>
                    <Login />
                  </ErrorBoundary>
                )
              }
            />
            <Route
              path="/apply-leave"
              element={
                token && user?.role === 'EMPLOYEE' ? (
                  <ErrorBoundary>
                    <ApplyLeave />
                  </ErrorBoundary>
                ) : (
                  <Navigate to={token ? "/profile" : "/login"} />
                )
              }
            />
            <Route
              path="/dashboard"
              element={
                token && isAdmin ? (
                  <ErrorBoundary>
                    <Dashboard />
                  </ErrorBoundary>
                ) : (
                  <Navigate to={token ? "/profile" : "/login"} />
                )
              }
            />
            <Route
              path="/add-employee"
              element={
                token && user?.role === 'ADMIN' ? (
                  <AddEmployee />
                ) : (
                  <Navigate to={token ? "/apply-leave" : "/login"} />
                )
              }
            />
            <Route
              path="/approval"
              element={
                token && isAdmin ? (
                  <ErrorBoundary>
                    <Approval />
                  </ErrorBoundary>
                ) : (
                  <Navigate to={token ? "/profile" : "/login"} />
                )
              }
            />
            <Route
              path="/history"
              element={
                token && user?.role === 'EMPLOYEE' ? (
                  <ErrorBoundary>
                    <History />
                  </ErrorBoundary>
                ) : (
                  <Navigate to={token ? "/profile" : "/login"} />
                )
              }
            />
            <Route
              path="/profile"
              element={
                token ? (
                  <ErrorBoundary>
                    <Profile />
                  </ErrorBoundary>
                ) : (
                  <Navigate to="/login" />
                )
              }
            />
            <Route
              path="/"
              element={<Navigate to={token ? (isAdmin ? "/dashboard" : "/apply-leave") : "/login"} />}
            />
          </Routes>
        </div>
      </Router>
    </div>
  );
}

export default App;
