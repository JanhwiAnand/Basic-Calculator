//navbar
import { NavLink } from 'react-router-dom';
import { useSelector } from 'react-redux';
import { getUser } from '../redux/selectors';
import Logout from './Logout';

const Navbar = () => {
    const user = useSelector(getUser);

    return (
        <nav className="navbar navbar-expand-lg navbar-light bg-light">
            <div className="container-fluid">
                <span className="navbar-brand">EMS</span>
                <button
                    className="navbar-toggler"
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target="#navbarNav"
                    aria-controls="navbarNav"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                >
                    <span className="navbar-toggler-icon"></span>
                </button>
                <div className="collapse navbar-collapse" id="navbarNav">
                    <ul className="navbar-nav me-auto">
                        {user?.role === 'ADMIN' && (
                            <li className="nav-item">
                                <NavLink className="nav-link" to="/add-employee">Add Employee</NavLink>
                            </li>
                        )}
                        {user?.role === 'EMPLOYEE' && (
                            <li className="nav-item">
                                <NavLink className="nav-link" to="/apply-leave">Apply Leave</NavLink>
                            </li>
                        )}
                        {user?.role === 'ADMIN' && (
                            <li className="nav-item">
                                <NavLink className="nav-link" to="/approval">Approval</NavLink>
                            </li>
                        )}
                        {user?.role === 'EMPLOYEE' && (
                            <li className="nav-item">
                                <NavLink className="nav-link" to="/history">History</NavLink>
                            </li>
                        )}
                        <li className="nav-item">
                            <NavLink className="nav-link" to="/profile">Profile</NavLink>
                        </li>
                    </ul>
                    <Logout />
                </div>
            </div>
        </nav>
    );
};

export default Navbar;
//app.js
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { useSelector } from 'react-redux';
import Login from './components/Login';
import Navbar from './components/Navbar';
import ApplyLeave from './components/ApplyLeave';
import Approval from './components/Approval';
import History from './components/History';
import Profile from './components/Profile';
import ErrorBoundary from './components/ErrorBoundary';
import { getToken, getUser } from './redux/selectors';
import './styles.css';
import AddEmployeeForm from './components/AddUser';

function App() {
  const token = useSelector(getToken);
  const user = useSelector(getUser);
  const isAdmin = user?.role === 'ADMIN';

  return (
    <div style={{ height: '100vh', width: '100vw' }}>
      <Router>
        {token && <Navbar />}
        <div className="container mt-3">
          <Routes>
            <Route
              path="/login"
              element={
                token ? (
                  <Navigate to={isAdmin ? "/add-employee" : "/apply-leave"} />
                ) : (
                  <ErrorBoundary>
                    <Login />
                  </ErrorBoundary>
                )
              }
            />
            <Route
              path="/apply-leave"
              element={
                token && user?.role === 'EMPLOYEE' ? (
                  <ErrorBoundary>
                    <ApplyLeave />
                  </ErrorBoundary>
                ) : (
                  <Navigate to={token ? "/profile" : "/login"} />
                )
              }
            />
            <Route
              path="/add-employee"
              element={
                token && isAdmin ? (
                  <ErrorBoundary>
                    <AddEmployeeForm />
                  </ErrorBoundary>
                ) : (
                  <Navigate to={token ? "/profile" : "/login"} />
                )
              }
            />
            <Route
              path="/approval"
              element={
                token && isAdmin ? (
                  <ErrorBoundary>
                    <Approval />
                  </ErrorBoundary>
                ) : (
                  <Navigate to={token ? "/profile" : "/login"} />
                )
              }
            />
            <Route
              path="/history"
              element={
                token && user?.role === 'EMPLOYEE' ? (
                  <ErrorBoundary>
                    <History />
                  </ErrorBoundary>
                ) : (
                  <Navigate to={token ? "/profile" : "/login"} />
                )
              }
            />
            <Route
              path="/profile"
              element={
                token ? (
                  <ErrorBoundary>
                    <Profile />
                  </ErrorBoundary>
                ) : (
                  <Navigate to="/login" />
                )
              }
            />
            <Route
              path="/"
              element={<Navigate to={token ? (isAdmin ? "/add-employee" : "/apply-leave") : "/login"} />}
            />
          </Routes>
        </div>
      </Router>
    </div>
  );
}

export default App;
