import { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { fetchPendingLeaves, approveLeave, declineLeave } from '../redux/actions/leaveActions';
import { getToken, getPendingLeaves, getLeaveLoading } from '../redux/selectors';
import '../css/Approval.css'; // âœ… Import the updated styles

const Approval = () => {
  const [declineReason, setDeclineReason] = useState('');
  const [selectedLeaveId, setSelectedLeaveId] = useState(null);

  const dispatch = useDispatch();
  const token = useSelector(getToken);
  const pendingLeaves = useSelector(getPendingLeaves);
  const loading = useSelector(getLeaveLoading);

  useEffect(() => {
    dispatch(fetchPendingLeaves(token));
  }, [dispatch, token]);

  const handleApprove = (leaveId) => {
    dispatch(approveLeave(leaveId, token));
  };

  const handleDecline = (leaveId) => {
    if (!declineReason) {
      alert('Please provide a reason for declining');
      return;
    }
    dispatch(declineLeave(leaveId, declineReason, token));
    setDeclineReason('');
    setSelectedLeaveId(null);
  };

  return (
    <div className="approval-container">
      <h2 className="approval-heading">Leave Approval</h2>
      <div className="approval-card">
        <h5 className="approval-title">Pending Leave Requests</h5>
        <div className="table-container">
          <table className="approval-table">
            <thead>
              <tr>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Category</th>
                <th>Reason</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {pendingLeaves.length === 0 ? (
                <tr>
                  <td colSpan="7" className="no-leaves">No pending leave requests</td>
                </tr>
              ) : (
                pendingLeaves.map(leave => (
                  <tr key={leave.id}>
                    <td>{leave.firstname}</td>
                    <td>{leave.lastname}</td>
                    <td>{leave.startDate}</td>
                    <td>{leave.endDate}</td>
                    <td>{leave.category}</td>
                    <td>{leave.reason}</td>
                    <td>
                      <button className="btn btn-success btn-sm me-2" onClick={() => handleApprove(leave.id)} disabled={loading}>Approve</button>
                      <button className="btn btn-danger btn-sm" onClick={() => setSelectedLeaveId(leave.id)} data-bs-toggle="modal" data-bs-target="#declineModal" disabled={loading}>Decline</button>
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>
      </div>

      {/* Modal for Decline Reason */}
      {selectedLeaveId !== null && (
        <div className="modal fade show approval-modal" id="declineModal" tabIndex="-1" aria-labelledby="declineModalLabel" aria-hidden="true" style={{ display: 'block' }}>
          <div className="modal-dialog">
            <div className="modal-content approval-modal-content">
              <div className="modal-header approval-modal-header">
                <h5 className="modal-title">Decline Leave</h5>
                <button type="button" className="btn-close" onClick={() => setSelectedLeaveId(null)}></button>
              </div>
              <div className="modal-body">
                <div className="mb-3">
                  <label className="form-label">Reason for Decline</label>
                  <textarea className="form-control approval-textarea" value={declineReason} onChange={(e) => setDeclineReason(e.target.value)} required />
                </div>
              </div>
              <div className="modal-footer">
                <button type="button" className="btn btn-secondary" onClick={() => setSelectedLeaveId(null)}>Close</button>
                <button type="button" className="btn btn-danger" onClick={() => handleDecline(selectedLeaveId)}>Decline</button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default Approval;
