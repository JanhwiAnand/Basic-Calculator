export const applyLeave = (leaveData, token) => async dispatch => {
  dispatch({ type: APPLY_LEAVE_REQUEST });
  try {
    const response = await axios.post('http://localhost:5000/api/leaves/apply', leaveData, {
      headers: { Authorization: `Bearer ${token}` },
    });
    dispatch({ type: APPLY_LEAVE_SUCCESS, payload: response.data });
  } catch (error) {
    const message = error.response?.data?.errors?.[0] || 'Failed to apply leave';
    dispatch({ type: APPLY_LEAVE_FAILURE, payload: message });
    throw error;
  }
};import { useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { applyLeave } from '../redux/actions/leaveActions';
import { addUser } from '../redux/actions/userActions'; 
import {
  getToken,
  getLeaveLoading,
  getLeaveError,
  getUser
} from '../redux/selectors';

const ApplyLeave = () => {
  const dispatch = useDispatch();
  const token = useSelector(getToken);
  const user = useSelector(getUser);
  const loading = useSelector(getLeaveLoading);
  const error = useSelector(getLeaveError);



  const [leaveData, setLeaveData] = useState({
    category: '',
    startDate: '',
    endDate: '',
    reason: '',
  });

  const handleLeaveChange = (e) => {
    const { name, value } = e.target;
    setLeaveData(prev => ({ ...prev, [name]: value }));
  };


  const handleApply = async () => {
    try {
      const leaveDataWithEmail = {
        ...leaveData,
        employeeEmail: user?.email || '',
      };
      await dispatch(applyLeave(leaveDataWithEmail, token));
      alert('Leave applied successfully');
      setLeaveData({
        category: '',
        startDate: '',
        endDate: '',
        reason: '',
      });
    } catch (error) {
      console.error('Error applying leave:', error.message);
      alert(`Failed to apply leave: ${error.message}`);
    }
  };

 

  return (
    <div>
        {
      
        <>
          <h2 className="text-center mb-4">Apply Leave</h2>
          <div className="card p-4">
            <div className="mb-3">
              <label className="form-label">Category</label>
              <select
                className="form-control"
                name="category"
                value={leaveData.category}
                onChange={handleLeaveChange}
                required
              >
                <option value="CATEGORY">Select Category</option>
                <option value="SICK">Sick Leave</option>
                <option value="CASUAL">Casual Leave</option>
                <option value="ANNUAL">Annual Leave</option>
              </select>
            </div>
            <div className="mb-3">
              <label className="form-label">Start Date</label>
              <input
                type="date"
                className="form-control"
                name="startDate"
                value={leaveData.startDate}
                onChange={handleLeaveChange}
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">End Date</label>
              <input
                type="date"
                className="form-control"
                name="endDate"
                value={leaveData.endDate}
                onChange={handleLeaveChange}
                required
              />
            </div>
            <div className="mb-3">
              <label className="form-label">Reason</label>
              <textarea
                className="form-control"
                name="reason"
                value={leaveData.reason}
                onChange={handleLeaveChange}
                required
              />
            </div>
            <button
              className="btn btn-primary me-2"
              onClick={handleApply}
              disabled={loading}
            >
              {loading ? 'Applying...' : 'Apply'}
            </button>
            {error && (
              <div className="alert alert-danger mt-3" role="alert">
                Error: {error}
              </div>
            )}
          </div>
         
        </>
          
      }
    
    </div>
  );
};

export default ApplyLeave;
