import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { useSelector } from 'react-redux';
import Login from './components/Login';
import Navbar from './components/Navbar';
import ApplyLeave from './components/ApplyLeave';
import Approval from './components/Approval';
import History from './components/History';
import Profile from './components/Profile';
import ErrorBoundary from './components/ErrorBoundary';
import { getToken, getUser } from './redux/selectors';
import './styles.css';
import AddEmployeeForm from './components/AddUser';

function App() {
  const token = useSelector(getToken);
  const user = useSelector(getUser);

  const isAdmin = user?.role === 'ADMIN';
  const isEmployee = user?.role === 'EMPLOYEE';

  return (
    <div style={{ height: '100vh', width: '100vw' }}>
      <Router>
        {token && <Navbar />}
        <div className="container mt-3">
          <Routes>
            {/* Login */}
            <Route
              path="/login"
              element={
                token ? (
                  <Navigate to={isAdmin ? "/add-employee" : "/apply-leave"} />
                ) : (
                  <ErrorBoundary><Login /></ErrorBoundary>
                )
              }
            />

            {/* Admin-only routes */}
            {isAdmin && (
              <>
                <Route path="/add-employee" element={<ErrorBoundary><AddEmployeeForm /></ErrorBoundary>} />
                <Route path="/approval" element={<ErrorBoundary><Approval /></ErrorBoundary>} />
              </>
            )}

            {/* Employee-only routes */}
            {isEmployee && (
              <Route path="/apply-leave" element={<ErrorBoundary><ApplyLeave /></ErrorBoundary>} />
            )}

            {/* Common routes */}
            {token && (
              <>
                <Route path="/history" element={<ErrorBoundary><History /></ErrorBoundary>} />
                <Route path="/profile" element={<ErrorBoundary><Profile /></ErrorBoundary>} />
              </>
            )}

            {/* Default route */}
            <Route path="/" element={<Navigate to={token ? (isAdmin ? "/add-employee" : "/apply-leave") : "/login"} />} />

            {/* Catch-all fallback */}
            <Route path="*" element={<Navigate to="/" />} />
          </Routes>
        </div>
      </Router>
    </div>
  );
}

export default App;
