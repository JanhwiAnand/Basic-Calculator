// Auth Reducer: Manages authentication state
const initialState = {
  token: sessionStorage.getItem('token') || null,
  user: JSON.parse(sessionStorage.getItem('user')) || null,
  error: null,
  loading: false,
};

const authReducer = (state = initialState, action) => {
  switch (action.type) {
    case 'FORGOT_PASSWORD_REQUEST':
      return { ...state, loading: true, error: null };

    case 'FORGOT_PASSWORD_SUCCESS':
      return { ...state, loading: false, message: action.payload };

    case 'FORGOT_PASSWORD_FAILURE':
      return { ...state, loading: false, error: action.payload };

    case 'LOGIN_REQUEST':
      return { ...state, loading: true, error: null };
    case 'LOGIN_SUCCESS':
      sessionStorage.setItem('token', action.payload.token);
      sessionStorage.setItem('user', JSON.stringify(action.payload.user));
      return { ...state, token: action.payload.token, user: action.payload.user, loading: false };
    case 'LOGIN_FAILURE':
      return { ...state, error: action.payload, loading: false };
    case 'LOGOUT':
      sessionStorage.removeItem('token');
      sessionStorage.removeItem('user');
      return { ...state, token: null, user: null };
    default:
      return state;
  }
};

export default authReducer;
