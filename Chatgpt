const resetPassword = asyncHandler(async (req, res) => {
  const { email, newPassword } = req.body;

  if (!email || !newPassword) {
    throw new CustomError(
      constants.errorMessages.MISSING_FIELDS,
      constants.status.BAD_REQUEST
    );
  }

  try {
    const response = await axios.post(`${env.SPRING_BOOT_API}/api/auth/reset-password`, {
      email,
      newPassword
    });

    logger.info(`Password reset request processed for ${email}`);
    res.json({ success: true, message: response.data });
  } catch (error) {
    handleAxiosError(error, res);
  }
});

module.exports = {
  forgotPassword,
  resetPassword,
};
🔁 Summary of Improvements
Feature	Status
Matches forgotPassword format	✅
Uses asyncHandler	✅
Centralized error logging	✅
Uses env.SPRING_BOOT_API	✅
Checks required fields	✅
Sends clean response	✅

Let me know if you need the final list of API endpoints, or Swagger-style documentation for the Node routes.









    
