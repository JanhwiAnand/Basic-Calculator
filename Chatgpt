export const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';
export const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';
export const FORGOT_PASSWORD_FAILURE = 'FORGOT_PASSWORD_FAILURE';

export const forgotPassword = (firstname, lastname, email) => async dispatch => {
  dispatch({ type: FORGOT_PASSWORD_REQUEST });
  try {
    const response = await axios.post('http://localhost:5000/api/auth/forgot-password', {
      firstname,
      lastname,
      email
    });
    dispatch({ type: FORGOT_PASSWORD_SUCCESS, payload: response.data.message });
  } catch (error) {
    dispatch({
      type: FORGOT_PASSWORD_FAILURE,
      payload: error.response?.data?.message || 'Request failed',
    });
  }
};
reducer:-
case 'FORGOT_PASSWORD_REQUEST':
  return { ...state, loading: true, error: null };

case 'FORGOT_PASSWORD_SUCCESS':
  return { ...state, loading: false, message: action.payload };

case 'FORGOT_PASSWORD_FAILURE':
  return { ...state, loading: false, error: action.payload };

form page
import { useDispatch, useSelector } from 'react-redux';
import { forgotPassword } from '../redux/actions/authActions';
import { getAuthMessage, getAuthError, getAuthLoading } from '../redux/selectors/authSelectors';

const dispatch = useDispatch();
const loading = useSelector(getAuthLoading);
const error = useSelector(getAuthError);
const message = useSelector(getAuthMessage);

const handleSubmit = async (e) => {
  e.preventDefault();
  dispatch(forgotPassword(firstname, lastname, email));
};

