import { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { resetPassword } from '../redux/actions/authActions';
import { useLocation, useNavigate } from 'react-router-dom';

const ResetPasswordForm = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const dispatch = useDispatch();

  const [email] = useState(location.state?.email || '');
  const [newPassword, setNewPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [errors, setErrors] = useState({});

  const { loading, message, error } = useSelector((state) => state.resetPassword);

  // ✅ Password complexity check
  const validate = () => {
    const errs = {};
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/;

    if (!passwordRegex.test(newPassword)) {
      errs.newPassword =
        'Password must be at least 8 characters, include uppercase, lowercase, and special character';
    }

    if (newPassword !== confirmPassword) {
      errs.confirmPassword = 'Passwords do not match';
    }

    setErrors(errs);
    return Object.keys(errs).length === 0;
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (validate()) {
      dispatch(resetPassword({ email, newPassword }));
    }
  };

  useEffect(() => {
    if (message) {
      setTimeout(() => navigate('/login'), 1500);
    }
  }, [message, navigate]);

  return (
    <div className="container mt-5">
      <h3 className="text-center mb-4">Reset Password</h3>
      <form onSubmit={handleSubmit} className="w-50 mx-auto">
        <div className="mb-3">
          <label>Email</label>
          <input
            type="email"
            className="form-control"
            value={email}
            readOnly
          />
        </div>

        <div className="mb-3">
          <label>New Password</label>
          <div className="input-group">
            <input
              type={showPassword ? 'text' : 'password'}
              className="form-control"
              value={newPassword}
              onChange={(e) => setNewPassword(e.target.value)}
              required
            />
            <span
              className="input-group-text"
              onClick={() => setShowPassword(!showPassword)}
              style={{ cursor: 'pointer' }}
            >
              {showPassword ? '🙈' : '👁️'}
            </span>
          </div>
          {errors.newPassword && (
            <div className="text-danger">{errors.newPassword}</div>
          )}
        </div>

        <div className="mb-3">
          <label>Confirm Password</label>
          <input
            type={showPassword ? 'text' : 'password'}
            className="form-control"
            value={confirmPassword}
            onChange={(e) => setConfirmPassword(e.target.value)}
            required
          />
          {errors.confirmPassword && (
            <div className="text-danger">{errors.confirmPassword}</div>
          )}
        </div>

        <button
          className="btn btn-primary w-100"
          disabled={loading || !newPassword || !confirmPassword}
        >
          {loading ? 'Resetting...' : 'Reset Password'}
        </button>

        {message && <div className="alert alert-success mt-3">{message}</div>}
        {error && <div className="alert alert-danger mt-3">{error}</div>}
      </form>
    </div>
  );
};

export default ResetPasswordForm;
