package com.example.ems.repository;

import com.example.ems.dto.LeaveResponseDto;
import com.example.ems.entity.LeaveRequest;
import com.example.ems.enums.LeaveStatus;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;

import java.time.LocalDate;
import java.time.LocalDateTime; // Add this import
import java.util.List;

public interface LeaveRequestRepository extends JpaRepository<LeaveRequest, Long>, JpaSpecificationExecutor<LeaveRequest> {

    Page<LeaveRequest> findByUserEmailOrderByStartDateDesc(String email, Pageable pageable);

    @Query("SELECT lr FROM LeaveRequest lr WHERE lr.user.email = :email AND " +
           "((lr.startDate <= :endDate AND lr.endDate >= :startDate) AND lr.status = 'APPROVED')")
    List<LeaveRequest> findOverlappingLeaves(String email, LocalDate startDate, LocalDate endDate);

    @Query("SELECT SUM(DATEDIFF(lr.endDate, lr.startDate) + 1) FROM LeaveRequest lr " +
           "WHERE lr.user.email = :email AND YEAR(lr.startDate) = :year AND lr.status = 'APPROVED'")
    Long calculateLeaveDays(String email, int year);

    List<LeaveRequest> findByCreatedAtBetween(LocalDateTime start, LocalDateTime end); 
    
    @Query("SELECT new com.example.ems.dto.LeaveResponseDto(" +
            "lr.id, u.firstname, u.lastname, u.email, " +
            "lr.startDate, lr.endDate, lr.reason, lr.category, lr.status) " +
            "FROM LeaveRequest lr " +
            "JOIN lr.user u " +
            "WHERE lr.status = :status")
     Page<LeaveResponseDto> findByStatusWithUserDetails(LeaveStatus status, Pageable pageable);
 }
